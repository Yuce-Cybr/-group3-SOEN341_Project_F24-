name: Frontend CI Workflow

on:
  push:
    branches:
      - testing  # Trigger on push to the 'testing' branch
  pull_request:
    branches:
      - testing  # Trigger on pull requests targeting the 'testing' branch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Debug the file structure
      - name: List root directory
        run: ls -la

      - name: List Frontend directory
        run: ls -la ./Frontend

      # Step 3: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 4: Cache npm dependencies
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/Frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 5: Install dependencies
      - name: Install dependencies
        working-directory: ./Frontend
        run: npm install

      # Step 6: Run tests
      - name: Run tests
        working-directory: ./Frontend
        env:
          CI: true # Prevent Jest from running in interactive mode
        run: npm test

      # Step 7: Debug test output (Optional)
      - name: Debug Jest output
        if: always() # This runs regardless of test success/failure
        run: cat ./Frontend/test-results

      # Step 8: Upload test results
      - name: Upload test results
        if: always() # Upload results even if tests fail
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./Frontend/test-results # Make sure this directory exists and is configured in Jest

      # Step 9: Upload coverage report
      - name: Upload coverage report
        if: always() # Upload even if tests fail
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./Frontend/coverage # Ensure coverage is configured in Jest
